# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Vercel CI

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: [ main ]

jobs:
  # https://github.com/marketplace/actions/vercel-action
  # https://github.com/vercel/vercel/discussions/4367#discussioncomment-1672222
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Install and CI and Build
        run: |
          npm install
          npm ci
          npm run build
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Archive Build
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: .vercel/output/functions/out/app.js.func/out
      - name: Add env
        # IMPORTANT: there must not be the ability to download the built because inside who are the keys
        run: |
          echo -e "\nAPI_KEY_CROWDIN=${{ secrets.API_KEY_CROWDIN }}" >> .vercel/output/functions/out/app.js.func/.env
          echo -e "API_KEY_GITHUB=${{ secrets.API_KEY_GITHUB }}" >> .vercel/output/functions/out/app.js.func/.env
          echo -e "FIREBASE_WEBSITE_WEBAPI_APIKEY=${{ secrets.FIREBASE_WEBSITE_WEBAPI_APIKEY }}" >> .vercel/output/functions/out/app.js.func/.env
          echo -e "FIREBASE_WEBSITE_WEBAPI_AUTHDOMAIN=${{ secrets.FIREBASE_WEBSITE_WEBAPI_AUTHDOMAIN }}" >> .vercel/output/functions/out/app.js.func/.env
          echo -e "FIREBASE_WEBSITE_WEBAPI_PROJECTID=${{ secrets.FIREBASE_WEBSITE_WEBAPI_PROJECTID }}" >> .vercel/output/functions/out/app.js.func/.env
          echo -e "FIREBASE_WEBSITE_WEBAPI_STORAGEBUCKET=${{ secrets.FIREBASE_WEBSITE_WEBAPI_STORAGEBUCKET }}" >> .vercel/output/functions/out/app.js.func/.env
          echo -e "FIREBASE_WEBSITE_WEBAPI_MESSAGINGSENDERID=${{ secrets.FIREBASE_WEBSITE_WEBAPI_MESSAGINGSENDERID }}" >> .vercel/output/functions/out/app.js.func/.env
          echo -e "FIREBASE_WEBSITE_WEBAPI_APPID=${{ secrets.FIREBASE_WEBSITE_WEBAPI_APPID }}" >> .vercel/output/functions/out/app.js.func/.env
          echo -e "FIREBASE_WEBSITE_WEBAPI_MEASUREMENTID=${{ secrets.FIREBASE_WEBSITE_WEBAPI_MEASUREMENTID }}" >> .vercel/output/functions/out/app.js.func/.env
          echo -e "LOGTAIL_WEBAPI_KEY=${{ secrets.LOGTAIL_WEBAPI_KEY }}" >> .vercel/output/functions/out/app.js.func/.env
          echo -e "API_KEY_DISCORD_CLIENT_ID=${{ secrets.API_KEY_DISCORD_CLIENT_ID }}" >> .vercel/output/functions/out/app.js.func/.env
          echo -e "API_KEY_DISCORD_CLIENT_SECRET=${{ secrets.API_KEY_DISCORD_CLIENT_SECRET }}" >> .vercel/output/functions/out/app.js.func/.env
          echo -e "NOREPLY_GMAIL_PASSWORD=${{ secrets.NOREPLY_GMAIL_PASSWORD }}" >> .vercel/output/functions/out/app.js.func/.env
          echo -e "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .vercel/output/functions/out/app.js.func/.env
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

